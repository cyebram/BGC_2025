---
title: "Ejemplos 2. Gráficas"
format: html
editor: visual
---


```{r}
#| message: false
#| warning: false

library(tidyverse)
library(ggthemes)
library(reshape2)
library(pheatmap)
library(plotly)
library(plotrix)
library(tastypie)
library(Hmisc)
library(ggbeeswarm)
library(patchwork)
library(ggridges)

library(Hiiragi2013)
library(mouse4302.db)
```





# Primera gráfica: Scatterplot de los datos Iris

```{r}
data("iris")

glimpse(iris)

ggplot(
  data = iris,
  mapping = aes(x = Sepal.Length, y = Sepal.Width)) +
  geom_point(aes(color = Species, shape=Species), size=3) +
  #geom_smooth(method = "lm", se=FALSE, color="firebrick", linewidth=1.3) +
  geom_smooth(aes(color=Species), method = "lm", se=FALSE,  linewidth=1.3) +
  labs(
    title = "Sepal Length and Sepal Width",
    subtitle = "Edgar Anderson's Iris Data",
    x = "Sepal length (cm)", y = "Sepal width (cm)",
    color = "Species"
  ) +
  scale_color_colorblind()+
  theme_bw()+
  theme(
    #legend.position="bottom",
    #legend.position = c(.95, .95),
    #legend.justification = c("right", "top"),
    #legend.box.just = "right",
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```


Guardamos la gráfica.

```{r}
ggsave("Sepal.jpg", width = 150, height = 100, units="mm", scale=1.3, dpi=320)
```


# Datos Hiiragi 2013


Cargamos los datos y verificamos su clase.


```{r}
data("x")
class(x)
```

Más información del objeto del tipo `ExpressionSet`


```{r}
x
```



Extraemos en objetos diferentes la tabla de expresión y los metadatos.

```{r}
expr_data <- Biobase::exprs(x)
pheno_data <- pData(x)
glimpse(pheno_data)
```



Tabla de frecuencias de los 8 tipos de muestras.

```{r}
table(pheno_data$sampleGroup)
```


O bien:


```{r}
groups <- group_by(pheno_data, sampleGroup) |> 
  summarise(n=n(), color=unique(sampleColour))
groups
```



# Barplot para las frecuencias de los 8 grupos.


```{r}
#| fig-align: "center"

# Primero creamos un vector con el color para cada grupo
groupColor <-  setNames(groups$color, groups$sampleGroup)

ggplot(pheno_data)+
  geom_bar(aes(x= sampleGroup, fill=sampleGroup))+
  scale_fill_manual(values = groupColor, name = "Groups")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    axis.text.x=element_text(size=12, angle=45, hjust = 1),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```





```{r}
#| fig-align: "center"

ggplot(groups)+
  geom_bar(aes(x= sampleGroup, y=n, fill=sampleGroup), stat="identity", show.legend = FALSE)+
  scale_fill_manual(values = groupColor)+
  theme_bw()+
  theme(
    axis.text.x=element_text(size=12, angle=45, hjust = 1),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```







